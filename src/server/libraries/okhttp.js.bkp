console.log("Script loaded successfully ");
const interceptFlag = 0;

Java.perform(function() {
    var OkHttpClient = Java.use('okhttp3.OkHttpClient');
    var RequestBody = Java.use('okhttp3.RequestBody');
    var Buffer = Java.use('okio.Buffer');
    var Request = Java.use('okhttp3.Request');
    var MediaType = Java.use('okhttp3.MediaType');
    console.log("Data sent by python: " + interceptFlag);
    OkHttpClient.newCall.overload('okhttp3.Request').implementation = function(request) {
        var requestBody = request.body();
        // Change request body here
        // console.log("Received data: " + postdata);
        // var requestBodyString = postdata;
        // var mediaType = MediaType.parse('application/json');
        // var newRequestBody = RequestBody.create(mediaType, requestBodyString);
        // var modifiedRequest = request.newBuilder().method(request.method(), newRequestBody).build();

        

        var requestUrl = request.url().toString();
        console.log("============================");
        console.log("URL called: " + requestUrl);
        console.log("============================");

        // Intercepted HTTP request body data here
        // var buffer = Buffer.$new();
        // requestBody.writeTo(buffer);
        // var requestBodyString = '';
        // if (buffer.size() !== 0) {
        //     requestBodyString = buffer.readUtf8();
        // }

        // console.log("============================");
        // console.log("HTTP request intercepted data " + requestBodyString);
        // console.log("============================");

        // HTTP request data here
        var requestHeaders = request.headers();
        var requestHeaderNames = requestHeaders.names();
        var requestHeaderNamesArray = requestHeaderNames.toArray();
        console.log("============================");
        console.log("HTTP Request Headers");
        console.log("============================");
        for (var i = 0; i < requestHeaderNamesArray.length; i++) {
            var headerName = requestHeaderNamesArray[i];
            var headerValue = requestHeaders.get(headerName);
            console.log(headerName + ": " + headerValue);
        }
        console.log("============================");

        //HTTP request body data here
        // if (interceptFlag) {
        //     var buffer = Buffer.$new();
        //     newRequestBody.writeTo(buffer);
        //     var requestBodyString = '';
        //     if (buffer.size() !== 0) {
        //         requestBodyString = buffer.readUtf8();
        //     }
        //     console.log("============================");
        //     console.log('Modified HTTP request body: ', requestBodyString);
        //     console.log("============================");
        // }
        


        // HTTP Response data here
        var response = "";
        if (interceptFlag) {
            response = this.newCall(modifiedRequest).execute();
        }
        else {
            response = this.newCall(request).execute();
        }
        var responseHeaders = response.headers();
        var responseHeaderNames = responseHeaders.names();
        var responseHeaderNamesArray = responseHeaderNames.toArray();
        console.log("============================");
        console.log('HTTP Response Headers');
        console.log("============================");
        for (var i = 0; i < responseHeaderNamesArray.length; i++) {
            var responseHeaderName = responseHeaderNamesArray[i];
            var responseHeaderValue = responseHeaders.get(responseHeaderName);
            console.log(responseHeaderName + ": " + responseHeaderValue);
        }
        console.log("============================");
        console.log("HTTP Response Body");
        console.log("============================");
        var responseBody = response.body();

        if (responseBody !== null) {
            if (response.isSuccessful()) {
                console.log(responseBody.string());
            } else {
                console.log("Error: Response not successful");
            }
        } else {
            console.log("Error: Empty response body");
            }
        console.log("============================");
        if (interceptFlag) {
	    return this.newCall(modifiedRequest);
	} else {
            return this.newCall(request);
        }
    };
});
